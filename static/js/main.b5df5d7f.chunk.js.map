{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/CurrentScore/index.js","components/HighestScore/index.js","components/WinsAndLosses/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","checkGuesses","id","style","border","selected","src","image","alt","name","Wrapper","children","Title","ScoreCard","HighestScore","WinsAndLosses","App","state","friends","guesses","currentScore","won","lost","highScore","cheatCode","shuffle","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","console","log","_this","continueGame","wonGame","i","lostGame","alert","setState","resetGame","concat","Object","toConsumableArray","render","event","target","checked","_this2","this","components_Wrapper","type","display","onChange","components_Title","CurrentScore","components_HighestScore","components_WinsAndLosses","map","friend","components_FriendCard","key","occupation","location","includes","Component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b5df5d7f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.checkGuesses(props.id)} style={{border: props.selected ? \"red 2px solid\" : \"none\"}}>\n      <img className=\"card-img\" src={props.image} alt={props.name} />\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ScoreCard(props) {\n  return <h2 className=\"score-card\">{props.children}</h2>;\n}\n\nexport default ScoreCard;\n\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction HighestScore(props) {\n  return <h3 className=\"highest-score\">{props.children}</h3>;\n}\n\nexport default HighestScore;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction WinsAndLosses(props) {\n  return <h3 className=\"wins-and-losses\">{props.children}</h3>;\n}\n\nexport default WinsAndLosses;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport CurrentScore from \"./components/CurrentScore\";\nimport HighestScore from \"./components/HighestScore\";\nimport WinsAndLosses from \"./components/WinsAndLosses\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    guesses: [],\n    currentScore: 0,\n    won: 0,\n    lost: 0,\n    highScore: 0,\n    cheatCode: false\n  };\n\n  shuffle = friends => {\n    var currentIndex = friends.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = friends[currentIndex];\n      friends[currentIndex] = friends[randomIndex];\n      friends[randomIndex] = temporaryValue;\n    };\n\n    return friends;\n  };\n\n  checkGuesses = id => {\n    console.log(\"guesses: \", this.state.guesses);\n    // console.log(\"this pick: \", id)\n    if (this.state.guesses.length === 0) {\n      this.continueGame(id);\n    } else if (this.state.guesses.length === 11) {\n      this.wonGame();\n    } else {\n      for (let i = 0; i < this.state.guesses.length; i++) {\n        if (id === this.state.guesses[i]) {\n          this.lostGame();\n        } else {\n          this.continueGame(id);\n        };\n      };\n    };\n  };\n\n  wonGame = () => {\n    // console.log(\"won\");\n    alert(\"You WON!\")\n    this.setState({ won: this.state.won + 1});\n    this.resetGame()\n  }\n\n  lostGame = () => {\n    // console.log(\"lost\");\n    alert(\"You LOST!\")\n    this.setState({ highScore: this.state.currentScore});\n    this.setState({ lost: this.state.lost + 1 });\n    this.resetGame()\n  };\n\n  continueGame = id => {\n    // console.log(\"continued\")\n    // console.log(\"guessesArray: \", this.state.guesses);\n\n    this.setState({ \n      guesses: [...this.state.guesses, id],\n      currentScore: this.state.currentScore + 1 })\n    // console.log(\"currentScore: \", this.state.currentScore);\n\n    this.shuffle(friends);\n    this.render(friends)\n  }\n\n  resetGame = () => {\n    this.setState({ currentScore: 0});\n    this.setState({ guesses: [] });\n    this.shuffle(friends)\n  }\n\n  cheatCode = event => {\n    this.setState({ cheatCode: event.target.checked})\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <input type=\"checkbox\" style={{display: \"none\"}} onChange={this.cheatCode} />\n        <Title>Clicky-Shuffle Game</Title>\n        <CurrentScore>Current Game Score: {this.state.currentScore}</CurrentScore>\n        <HighestScore>Highest Score: {this.state.highScore}</HighestScore>\n        <WinsAndLosses>Won: {this.state.won}  Lost: {this.state.lost}</WinsAndLosses>\n        {/* <CardDeck> */}\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            checkGuesses={this.checkGuesses}\n            selected={this.state.cheatCode ? this.state.guesses.includes(friend.id) : false}\n          />\n          // </CardDeck>\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}